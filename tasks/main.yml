---
# tasks file for dronenb.dockerengine
- name: Install Docker for Debian family OS's
  when: ansible_facts['os_family'] == "Debian"
  become: true
  block:
    - name: Remove old versions of Docker that may exist
      ansible.builtin.apt:
        pkg:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Install necessary prerequisites for Docker
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - lsb-release
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: '0644'

    - name: Get CPU architecture
      ansible.builtin.command:
        cmd: dpkg --print-architecture
      register: dpkg_architecture
      changed_when: false

    - name: Add Docker Repository
      apt_repository:
        repo: >-
          deb [arch={{ dpkg_architecture.stdout_lines.0 }} signed-by=/etc/apt/trusted.gpg.d/docker.asc]
          https://download.docker.com/linux/{{ ansible_facts.lsb.id | lower}}
          {{ ansible_facts.distribution_release }}
          stable
        filename: docker
        state: present

    - name: Install docker packages
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin

    - name: Install Docker SDK for Python
      ansible.builtin.pip:
        name: docker
        state: present

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started